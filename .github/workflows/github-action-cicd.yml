name: GitHub Actions CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Code Checkout
  checkout:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

  # Install Dependencies (Maven, Trivy, jq)
  # setup:
  #   needs: checkout
  #   runs-on: self-hosted
  #   steps:
  #     - name: Install Maven
  #       run: |
  #         sudo apt update
  #         sudo apt install -y maven
  #         mvn -version

  #     - name: Install Trivy
  #       run: |
  #         sudo apt-get install wget apt-transport-https gnupg lsb-release -y
  #         wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
  #         echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
  #         sudo apt-get update -y
  #         sudo apt-get install trivy -y

  #     - name: Install jq
  #       run: |
  #         sudo apt update
  #         sudo apt install -y jq
  #         jq --version

  # # Build Stage
  # build:
  #   needs: setup
  #   runs-on: self-hosted
  #   steps:
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #         cache: maven

  #     - name: Build with Maven
  #       run: mvn package --file pom.xml

  #     - name: Upload Build Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: my-artifacts
  #         path: target/*.jar

  # # Static Code Analysis
  # sonar_scan:
  #   needs: build
  #   runs-on: self-hosted
  #   steps:
  #     - name: SonarQube Scan
  #       uses: sonarsource/sonarqube-scan-action@master
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  #     - name: SonarQube Quality Gate Check
  #       id: sonarqube-quality-gate-check
  #       uses: sonarsource/sonarqube-quality-gate-action@master
  #       timeout-minutes: 5
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  # # Security Scanning
  # security_scan:
  #   needs: build
  #   runs-on: self-hosted
  #   steps:
  #     - name: Trivy FS Scan
  #       run: trivy fs --format table -o fs.html .

  # Docker Build & Push
  docker_build:
    runs-on: self-hosted
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Image Tag
        run: |
          VERSION="1.0.0"  # Manually updated for major releases
          BUILD_ID=${{ github.run_number }}
          GIT_SHA=$(git rev-parse --short HEAD)
          
          IMAGE_TAG="$VERSION-$BUILD_ID"
          IMAGE_SHA="$VERSION-$GIT_SHA"
          IMAGE_LATEST="$VERSION-latest"

          # echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          # echo "IMAGE_SHA=$IMAGE_SHA" >> $GITHUB_ENV
          # echo "IMAGE_LATEST=$IMAGE_LATEST" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t atkaridarshan04/boardgame-cicd:$IMAGE_TAG .

      - name: Trivy Image Scan
        run: trivy image --format table -o trivy-image-report.html atkaridarshan04/boardgame-cicd:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker tag atkaridarshan04/boardgame-cicd:$IMAGE_TAG atkaridarshan04/boardgame-cicd:$IMAGE_SHA
          # docker tag atkaridarshan04/boardgame-cicd:$IMAGE_TAG atkaridarshan04/boardgame-cicd:latest

          docker push atkaridarshan04/boardgame-cicd:$IMAGE_TAG
          docker push atkaridarshan04/boardgame-cicd:$IMAGE_SHA
          # docker push atkaridarshan04/boardgame-cicd:latest

